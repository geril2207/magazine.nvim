From 90a3c63d00a0a44c5c6c366973db92346ede32e1 Mon Sep 17 00:00:00 2001
From: L Lllvvuu <git@llllvvuu.dev>
Date: Tue, 12 Sep 2023 16:49:39 -0700
Subject: [PATCH 1/2] feat: config.view.entries.vertical_positioning =
 'auto'|'above'|'below'

'above' works best with vim.opt.scrolloff = 999.

Fixes: # 495
Helped-by: Thanatermesis <thanatermesis@gmail.com>
---
 lua/cmp/config/default.lua           |  1 +
 lua/cmp/types/cmp.lua                |  1 +
 lua/cmp/view/custom_entries_view.lua | 28 ++++++++++++++++++----------
 3 files changed, 20 insertions(+), 10 deletions(-)

diff --git a/lua/cmp/config/default.lua b/lua/cmp/config/default.lua
index 3c020cd46..5552b9a28 100644
--- a/lua/cmp/config/default.lua
+++ b/lua/cmp/config/default.lua
@@ -94,6 +94,7 @@ return function()
       entries = {
         name = 'custom',
         selection_order = 'top_down',
+        vertical_positioning = 'below',
       },
       docs = {
         auto_open = true,
diff --git a/lua/cmp/types/cmp.lua b/lua/cmp/types/cmp.lua
index a17409db5..b8e8bd031 100644
--- a/lua/cmp/types/cmp.lua
+++ b/lua/cmp/types/cmp.lua
@@ -176,6 +176,7 @@ cmp.ItemField = {
 ---@class cmp.CustomEntriesViewConfig
 ---@field name 'custom'
 ---@field selection_order 'top_down'|'near_cursor'
+---@field vertical_positioning 'auto'|'above'|'below'
 
 ---@class cmp.NativeEntriesViewConfig
 ---@field name 'native'
diff --git a/lua/cmp/view/custom_entries_view.lua b/lua/cmp/view/custom_entries_view.lua
index a5eca58b1..ca73c8946 100644
--- a/lua/cmp/view/custom_entries_view.lua
+++ b/lua/cmp/view/custom_entries_view.lua
@@ -117,7 +117,8 @@ custom_entries_view.is_direction_top_down = function(self)
 end
 
 custom_entries_view.open = function(self, offset, entries)
-  local completion = config.get().window.completion
+  local c = config.get()
+  local completion = c.window.completion
   self.offset = offset
   self.entries = {}
   self.column_width = { abbr = 0, kind = 0, menu = 0 }
@@ -161,12 +162,25 @@ custom_entries_view.open = function(self, offset, entries)
   local border_info = window.get_border_info({ style = completion })
   local border_offset_row = border_info.top + border_info.bottom
   local border_offset_col = border_info.left + border_info.right
-  if math.floor(vim.o.lines * 0.5) <= row + border_offset_row and vim.o.lines - row - border_offset_row <= math.min(DEFAULT_HEIGHT, height) then
+
+  local prefers_above = c.view.entries.vertical_positioning == 'above'
+  local prefers_auto = c.view.entries.vertical_positioning == 'auto'
+  local cant_fit_at_bottom = vim.o.lines - row - border_offset_row <= math.min(DEFAULT_HEIGHT, height)
+  local cant_fit_at_top = row - border_offset_row <= math.min(DEFAULT_HEIGHT, height)
+  local is_in_top_half = math.floor(vim.o.lines * 0.5) > row + border_offset_row
+  local should_position_above =
+    cant_fit_at_bottom or
+    (prefers_above and not cant_fit_at_top) or
+    (prefers_auto and is_in_top_half)
+  if should_position_above then
+    self.bottom_up = true
     height = math.min(height, row - 1)
     row = row - height - border_offset_row - 1
     if row < 0 then
       height = height + row
     end
+  else
+    self.bottom_up = false
   end
   if math.floor(vim.o.columns * 0.5) <= col + border_offset_col and vim.o.columns - col - border_offset_col <= width then
     width = math.min(width, vim.o.columns - 1)
@@ -176,12 +190,6 @@ custom_entries_view.open = function(self, offset, entries)
     end
   end
 
-  if pos[1] > row then
-    self.bottom_up = true
-  else
-    self.bottom_up = false
-  end
-
   if not self:is_direction_top_down() then
     local n = #self.entries
     for i = 1, math.floor(n / 2) do
@@ -208,9 +216,9 @@ custom_entries_view.open = function(self, offset, entries)
   })
   -- always set cursor when starting. It will be adjusted on the call to _select
   vim.api.nvim_win_set_cursor(self.entries_win.win, { 1, 0 })
-  if preselect_index > 0 and config.get().preselect == types.cmp.PreselectMode.Item then
+  if preselect_index > 0 and c.preselect == types.cmp.PreselectMode.Item then
     self:_select(preselect_index, { behavior = types.cmp.SelectBehavior.Select, active = false })
-  elseif not string.match(config.get().completion.completeopt, 'noselect') then
+  elseif not string.match(c.completion.completeopt, 'noselect') then
     if self:is_direction_top_down() then
       self:_select(1, { behavior = types.cmp.SelectBehavior.Select, active = false })
     else

From d63ad77826f01b9be2998f28e78c39434c783faf Mon Sep 17 00:00:00 2001
From: L Lllvvuu <git@llllvvuu.dev>
Date: Sat, 7 Oct 2023 21:16:53 -0700
Subject: [PATCH 2/2] fix(view): `docs_view` should go `bottom_up` if
 `custom_entries_view` did

---
 lua/cmp/view.lua                     | 6 ++++--
 lua/cmp/view/custom_entries_view.lua | 1 +
 lua/cmp/view/docs_view.lua           | 7 +++++--
 3 files changed, 10 insertions(+), 4 deletions(-)

diff --git a/lua/cmp/view.lua b/lua/cmp/view.lua
index a1b7c153d..3381d71c8 100644
--- a/lua/cmp/view.lua
+++ b/lua/cmp/view.lua
@@ -171,7 +171,8 @@ view.open_docs = function(self)
       if not self:visible() then
         return
       end
-      self.docs_view:open(e, self:_get_entries_view():info())
+      local bottom_up = self.custom_entries_view.bottom_up
+      self.docs_view:open(e, self:_get_entries_view():info(), bottom_up)
     end)))
   end
 end
@@ -268,7 +269,8 @@ view.on_entry_change = async.throttle(function(self)
         return
       end
       if self.is_docs_view_pinned or config.get().view.docs.auto_open then
-        self.docs_view:open(e, self:_get_entries_view():info())
+        local bottom_up = self.custom_entries_view.bottom_up
+        self.docs_view:open(e, self:_get_entries_view():info(), bottom_up)
       end
     end)))
   else
diff --git a/lua/cmp/view/custom_entries_view.lua b/lua/cmp/view/custom_entries_view.lua
index ca73c8946..2e2ea0f63 100644
--- a/lua/cmp/view/custom_entries_view.lua
+++ b/lua/cmp/view/custom_entries_view.lua
@@ -16,6 +16,7 @@ local DEFAULT_HEIGHT = 10 -- @see https://github.com/vim/vim/blob/master/src/pop
 ---@field private active boolean
 ---@field private entries cmp.Entry[]
 ---@field private column_width any
+---@field private bottom_up boolean
 ---@field public event cmp.Event
 local custom_entries_view = {}
 
diff --git a/lua/cmp/view/docs_view.lua b/lua/cmp/view/docs_view.lua
index 3947e33f8..f317388ef 100644
--- a/lua/cmp/view/docs_view.lua
+++ b/lua/cmp/view/docs_view.lua
@@ -25,7 +25,8 @@ end
 ---Open documentation window
 ---@param e cmp.Entry
 ---@param view cmp.WindowStyle
-docs_view.open = function(self, e, view)
+---@param bottom_up boolean|nil
+docs_view.open = function(self, e, view, bottom_up)
   local documentation = config.get().window.documentation
   if not documentation then
     return
@@ -90,6 +91,8 @@ docs_view.open = function(self, e, view)
     return self:close()
   end
 
+  local row = bottom_up and math.max(view.row - (height + border_info.vert - view.height), 1) or view.row
+
   -- Render window.
   self.window:option('winblend', vim.o.pumblend)
   self.window:option('winhighlight', documentation.winhighlight)
@@ -98,7 +101,7 @@ docs_view.open = function(self, e, view)
     style = 'minimal',
     width = width,
     height = height,
-    row = view.row,
+    row = row,
     col = col,
     border = documentation.border,
     zindex = documentation.zindex or 50,
